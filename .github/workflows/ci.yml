# This is a GitHub Actions workflow for the PICO Radar C++ project.
# It automates the build and test process to ensure code quality.

name: C++ CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install dependencies and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build lcov

      - name: Install vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Cache vcpkg dependencies
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/archives
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install dependencies
        run: ./vcpkg/vcpkg install --triplet x64-linux

      - name: Configure CMake
        run: >
          cmake -G Ninja -B build -S .
          -DCMAKE_BUILD_TYPE=Debug
          -DENABLE_COVERAGE=ON
          -DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build project
        run: cmake --build build --config Debug

      - name: Run tests
        working-directory: ./build
        run: ctest -C Debug --output-on-failure

      - name: Generate coverage report
        working-directory: ./build
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/vcpkg_installed/*' '*/test/*' --output-file coverage.info
          lcov --list coverage.info
          genhtml coverage.info --output-directory coverage_report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/coverage_report
