name: 'Setup vcpkg with Advanced Caching'
description: 'Install and configure vcpkg with comprehensive caching'
inputs:
  triplet:
    description: 'vcpkg triplet'
    required: true
  os:
    description: 'Operating system'
    required: true

runs:
  using: 'composite'
  steps:
    # 设置 vcpkg 环境变量以启用二进制缓存
    - name: Setup vcpkg environment
      run: |
        if [ "${{ runner.os }}" = "Linux" ]; then
          echo "VCPKG_DEFAULT_BINARY_CACHE=$HOME/.cache/vcpkg/archives" >> $GITHUB_ENV
          mkdir -p $HOME/.cache/vcpkg/archives
        else
          echo "VCPKG_DEFAULT_BINARY_CACHE=C:\vcpkg\archives" >> $GITHUB_ENV
          mkdir -p C:\vcpkg\archives
        fi
      shell: bash

    - name: Bootstrap vcpkg (Linux)
      if: inputs.os == 'Linux'
      run: |
        if [ ! -f "./vcpkg/vcpkg" ]; then
          ./vcpkg/bootstrap-vcpkg.sh
        fi
      shell: bash

    - name: Bootstrap vcpkg (Windows)
      if: inputs.os == 'Windows'
      run: |
        if (!(Test-Path ".\vcpkg\vcpkg.exe")) {
          .\vcpkg\bootstrap-vcpkg.bat
        }
      shell: powershell

    # 使用 manifest 模式和二进制缓存
    - name: Install vcpkg dependencies with binary caching
      run: |
        if [ "${{ runner.os }}" = "Linux" ]; then
          ./vcpkg/vcpkg install --triplet ${{ inputs.triplet }} --binarysource=clear --binarysource=files,$HOME/.cache/vcpkg/archives,readwrite
        else
          .\vcpkg\vcpkg.exe install --triplet ${{ inputs.triplet }} --binarysource=clear --binarysource=files,C:\vcpkg\archives,readwrite
        fi
      shell: bash