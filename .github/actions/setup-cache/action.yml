name: 'Setup All Caches'
description: 'Setup comprehensive caching for C++ build'
inputs:
  os:
    description: 'Operating system'
    required: true
  triplet:
    description: 'vcpkg triplet'
    required: true
  compiler:
    description: 'Compiler version'
    required: false
    default: 'default'

runs:
  using: 'composite'
  steps:
    # 1. vcpkg 二进制缓存
    - name: Cache vcpkg binary cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.os == 'Windows' && 'C:\vcpkg\archives' || '~/.cache/vcpkg/archives' }}
        key: vcpkg-binary-${{ inputs.os }}-${{ inputs.triplet }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
        restore-keys: |
          vcpkg-binary-${{ inputs.os }}-${{ inputs.triplet }}-
          vcpkg-binary-${{ inputs.os }}-

    # 2. vcpkg 已安装包缓存
    - name: Cache vcpkg installed packages
      uses: actions/cache@v4
      with:
        path: |
          vcpkg_installed
        key: vcpkg-installed-${{ inputs.os }}-${{ inputs.triplet }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
        restore-keys: |
          vcpkg-installed-${{ inputs.os }}-${{ inputs.triplet }}-
          vcpkg-installed-${{ inputs.os }}-

    # 3. CMake 配置缓存
    - name: Cache CMake configuration
      uses: actions/cache@v4
      with:
        path: |
          build/CMakeCache.txt
          build/CMakeFiles
          build/cmake_install.cmake
          build/CTestTestfile.cmake
        key: cmake-config-${{ inputs.os }}-${{ inputs.compiler }}-${{ hashFiles('CMakeLists.txt', 'cmake/**/*.cmake') }}
        restore-keys: |
          cmake-config-${{ inputs.os }}-${{ inputs.compiler }}-
          cmake-config-${{ inputs.os }}-

    # 4. 编译器缓存 (ccache for Linux, clcache for Windows)
    - name: Setup ccache (Linux)
      if: runner.os == 'Linux' && env.ACT != 'true'
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-${{ inputs.os }}-${{ inputs.compiler }}-${{ github.sha }}
        restore-keys: |
          ccache-${{ inputs.os }}-${{ inputs.compiler }}-
          ccache-${{ inputs.os }}-

    # 5. 包管理器缓存
    - name: Cache apt packages (Linux)
      if: runner.os == 'Linux'
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/**/*.yml') }}
        restore-keys: |
          apt-${{ runner.os }}-

    - name: Cache chocolatey packages (Windows)
      if: runner.os == 'Windows'
      uses: actions/cache@v4
      with:
        path: |
          C:\ProgramData\chocolatey\lib
          C:\ProgramData\chocolatey\logs
        key: choco-${{ runner.os }}-${{ hashFiles('.github/workflows/**/*.yml') }}
        restore-keys: |
          choco-${{ runner.os }}-

    # 6. 工具链缓存
    - name: Cache build tools (Windows)
      if: runner.os == 'Windows'
      uses: actions/cache@v4
      with:
        path: |
          C:\Program Files\Microsoft Visual Studio
          C:\Program Files (x86)\Microsoft Visual Studio
        key: msvc-${{ runner.os }}-${{ hashFiles('.github/workflows/**/*.yml') }}
        restore-keys: |
          msvc-${{ runner.os }}-